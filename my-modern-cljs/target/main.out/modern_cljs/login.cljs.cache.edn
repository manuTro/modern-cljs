;; Analyzed by ClojureScript 1.7.170
{:use-macros {html hiccups.core}, :excludes #{}, :name modern-cljs.login, :imports nil, :requires {domina.core domina.core, domina.events domina.events, hiccupsrt hiccups.runtime, hiccups.runtime hiccups.runtime, modern-cljs.login.validators modern-cljs.login.validators, shoreleave.remotes.http-rpc shoreleave.remotes.http-rpc}, :uses {user-credential-errors modern-cljs.login.validators, listen! domina.events, log domina.core, attr domina.core, remote-callback shoreleave.remotes.http-rpc, destroy! domina.core, by-id domina.core, prevent-default domina.events, value domina.core, append! domina.core, prepend! domina.core, by-class domina.core}, :defs {validate-email-domain {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :line 38, :column 15, :end-line 38, :end-column 36, :arglists (quote ([email]))}, :name modern-cljs.login/validate-email-domain, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :end-column 36, :method-params ([email]), :protocol-impl nil, :arglists-meta (nil nil), :column 9, :line 38, :end-line 38, :max-fixed-arity 1, :fn-var true, :arglists (quote ([email]))}, validate-email {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :line 48, :column 37, :end-line 48, :end-column 51, :arglists (quote ([email]))}, :name modern-cljs.login/validate-email, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :end-column 51, :method-params ([email]), :protocol-impl nil, :arglists-meta (nil nil), :column 31, :line 48, :end-line 48, :max-fixed-arity 1, :fn-var true, :arglists (quote ([email]))}, validate-password {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :line 56, :column 19, :end-line 56, :end-column 36, :arglists (quote ([password]))}, :name modern-cljs.login/validate-password, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :end-column 36, :method-params ([password]), :protocol-impl nil, :arglists-meta (nil nil), :column 13, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([password]))}, validate-form {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :line 65, :column 23, :end-line 65, :end-column 36, :arglists (quote ([evt email password]))}, :name modern-cljs.login/validate-form, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :end-column 36, :method-params ([evt email password]), :protocol-impl nil, :arglists-meta (nil nil), :column 17, :line 65, :end-line 65, :max-fixed-arity 3, :fn-var true, :arglists (quote ([evt email password]))}, init {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :line 75, :column 32, :end-line 75, :end-column 36, :export true, :arglists (quote ([]))}, :name modern-cljs.login/init, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/alk/-grrwi1/modern_cljs/login.cljs", :end-column 36, :method-params ([]), :protocol-impl nil, :export true, :arglists-meta (nil nil), :column 17, :line 75, :end-line 75, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {hiccups.core hiccups.core, shore-macros shoreleave.remotes.macros, shoreleave.remotes.macros shoreleave.remotes.macros}, :cljs.analyzer/constants {:seen #{:email :password :click :email-domain-errors :blur :id :class}, :order [:email-domain-errors :email :id :class :password :click :blur]}, :doc nil}