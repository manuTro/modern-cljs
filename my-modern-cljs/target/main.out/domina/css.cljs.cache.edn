;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name domina.css, :imports nil, :requires {domina domina.core, domina.core domina.core, dom goog.dom, goog.dom goog.dom, query goog.dom.query, goog.dom.query goog.dom.query}, :uses nil, :defs {root-element {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/domina/css.cljs", :line 6, :column 8, :end-line 6, :end-column 20, :private true, :arglists (quote ([]))}, :private true, :name domina.css/root-element, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/domina/css.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 6, :end-line 6, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, sel {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/domina/css.cljs", :line 11, :column 7, :end-line 11, :end-column 10, :arglists (quote ([expr] [base expr])), :doc "Returns content based on a css selector expression. Takes an optional content as a base; if none is given, uses the HTML element as a base.", :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [base expr]), :arglists ([expr] [base expr]), :arglists-meta (nil nil)}}, :name domina.css/sel, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/domina/css.cljs", :end-column 10, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([expr] [base expr]), :arglists ([expr] [base expr]), :arglists-meta (nil nil)}, :method-params ([expr] [base expr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 11, :end-line 11, :max-fixed-arity 2, :fn-var true, :arglists ([expr] [base expr]), :doc "Returns content based on a css selector expression. Takes an optional content as a base; if none is given, uses the HTML element as a base."}, t_domina$css6975 {:num-fields 3, :protocols #{cljs.core/IMeta domina.core/DomContent cljs.core/IWithMeta}, :name domina.css/t_domina$css6975, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/domina/css.cljs", :type true, :anonymous true, :column 16, :line 14, :record false, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}, ->t_domina$css6975 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IMeta domina.core/DomContent cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([base expr meta6976])), :file nil}, :protocols #{cljs.core/IMeta domina.core/DomContent cljs.core/IWithMeta}, :name domina.css/->t_domina$css6975, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/domina/css.cljs", :method-params ([base expr meta6976]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 16, :factory :positional, :line 14, :max-fixed-arity 3, :fn-var true, :arglists (quote ([base expr meta6976])), :skip-protocol-flag #{cljs.core/IMeta cljs.core/IWithMeta}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{base meta6976 expr}, :order [base expr meta6976]}, :doc nil}