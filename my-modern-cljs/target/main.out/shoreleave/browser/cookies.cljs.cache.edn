;; Analyzed by ClojureScript 1.7.170
{:name shoreleave.browser.cookies, :doc "An idiomatic interface to cookies", :excludes #{}, :use-macros nil, :require-macros nil, :uses nil, :requires {gCookies goog.net.Cookies, goog.net.Cookies goog.net.Cookies, gstr goog.string, goog.string goog.string}, :imports nil, :defs {as-hash-map {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :line 90, :column 7, :end-line 90, :end-column 18, :arglists (quote ([] [cks])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [cks]), :arglists ([] [cks]), :arglists-meta (nil nil)}}, :name shoreleave.browser.cookies/as-hash-map, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [cks]), :arglists ([] [cks]), :arglists-meta (nil nil)}, :method-params ([] [cks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 1, :fn-var true, :arglists ([] [cks])}, cookies {:name shoreleave.browser.cookies/cookies, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :line 88, :column 1, :end-line 88, :end-column 13, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :line 88, :column 6, :end-line 88, :end-column 13}}, cookies-enabled? {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :line 96, :column 7, :end-line 96, :end-column 23, :arglists (quote ([] [cks])), :doc "Returns a boolean, true if cookies are currently enabled for the browser", :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [cks]), :arglists ([] [cks]), :arglists-meta (nil nil)}}, :name shoreleave.browser.cookies/cookies-enabled?, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :end-column 23, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [cks]), :arglists ([] [cks]), :arglists-meta (nil nil)}, :method-params ([] [cks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists ([] [cks]), :doc "Returns a boolean, true if cookies are currently enabled for the browser"}, empty! {:protocol-inline nil, :meta {:file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :line 103, :column 7, :end-line 103, :end-column 13, :arglists (quote ([cks]))}, :name shoreleave.browser.cookies/empty!, :variadic false, :file "/home/manuela/.boot/cache/tmp/home/manuela/stage/clojurescript/modern-cljs/my-modern-cljs/bvv/ruawdm/main.out/shoreleave/browser/cookies.cljs", :end-column 13, :method-params ([cks]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 103, :end-line 103, :max-fixed-arity 1, :fn-var true, :arglists (quote ([cks]))}}}